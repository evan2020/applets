<style lang="scss">
// 设置文字向上的动画效果
@keyframes myfirst {
  from {
    bottom: -890rpx;
  }
  to {
    bottom: -200rpx;
  }
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
// 页面
.details {
  width: 750rpx;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100% 100%;
  display: flex;
  flex-direction: column;
  align-items: center;

  // 音频图标
  .record {
    width: 60rpx;
    height: 60rpx;
    line-height: 60rpx;
    border-radius: 50%;
    background-color: #eaeaea;
    text-align: center;
    position: absolute;
    top: 50rpx;
    left: 50rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    image {
      width: 50%;
      height: 50%;
    }
  }

  // 音乐图标
  .music {
    animation: rotate 3s;
    animation-fill-mode: forwards;
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    width: 60rpx;
    height: 60rpx;
    line-height: 60rpx;
    border-radius: 50%;
    background-color: #eaeaea;
    text-align: center;
    position: absolute;
    top: 50rpx;
    right: 50rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    image {
      width: 50%;
      height: 50%;
    }
  }

  .content {
    font-size: 30rpx;
    color: #66cc99;
    position: relative;
    height: 890rpx;
    width: 300rpx;
    top: 122rpx;
    overflow: hidden;

    .text {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: relative;
      animation: myfirst 30s;
      animation-fill-mode: forwards;
      animation-timing-function: linear;
      overflow: hidden;
    }
  }
}
</style>
<template>
  <!-- 页面 -->
  <view class="details" style="height:{{windowHeight}}px;background-image: url('{{dataUrl.bgImageUrl}}');">
     <!-- 音频图标 -->
    <view class="record" bindtap="recordPlay" wx:if="{{recordUrl!=''}}">
      <image src="{{dataUrl.recordIconUrl}}" >
      </image>
    </view>
    <!-- 音乐图标 -->
    <view style="animation-play-state:{{musicState}}" class="music" bindtap="toggleMusic">
      <image src="{{dataUrl.musicIconUrl}}">
      </image>
    </view>
    <!-- 祝福内容 -->
      <view class="content">
        <!-- 祝福语 -->
        <view class="text">
          <view style=""> 
            <repeat for="{{text}}" key="index" item="item">
            <view>{{item}}</view>
            </repeat>
          </view>
        </view>
      </view>
   
  </view>
</template>

<script>
import wepy from 'wepy';

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '端午'
  };
  components = {};

  data = {
    // 图片URl数据
    dataUrl: {
      // 背景图片
      bgImageUrl: `https://om83cysj8.qnssl.com/900fd18aade063301b497fbf84662548.jpg`,
      // 音频图标（播放录音）
      recordIconUrl: `https://om83cysj8.qnssl.com/%E5%BD%95%E9%9F%B3%E6%9C%BA%20%281%29.png`,
      // 音乐图标
      musicIconUrl: `https://om83cysj8.qnssl.com/Note_de_musique_music_256px_525366_easyicon.net.png`
    },
    // 转发数据
    share: {
      // 转发标题
      title: `父亲节快乐`,
      // 转发打开路径
      path: `/appletsA/pages/details/father`,
      // 封面图
      coverImageUrl: 'https://om83cysj8.qnssl.com/%E7%88%B6%E4%BA%B2%E8%8A%8211_Fotor.jpg'
    },
    // 用户数据
    userInfo: {
      // 用户名称
      user_name: ``,
      // 用户性别
      user_gender: ``,
      // 用户openid
      user_openid: ``
    },
    // 背景音乐数据
    bgMusicData: {
      // 专辑名
      epname: ``,
      // 音乐名
      title: `父亲`,
      // 歌手
      singer: `筷子兄弟`,
      // 封面图
      coverImgUrl: `https://om83cysj8.qnssl.com/a9d63448b881e12eab44fdfcdbd1cb7c_Fotor.png`,
      // 歌曲地址
      src: `https://om83cysj8.qnssl.com/at20111229221940.mp3`
    },
    msg: ``, //输入框的内容
    text: ``, //格式化之后要展示的内容
    recordUrl: ``, //录音云文件地址
    musicState: `running`, //音乐图片动画是否暂停
    windowHeight: '100%', //手机屏幕高度
    timeCheckVal: 'unlimited', //信件有效期
    timeNow: ``, //转发的时间戳
    defaultMsg: `小时候，父亲就是颗参天大树，为我们遮风挡雨，长大了，父亲成了本百科全书，为我们答疑解惑，父亲，永远是我们的支柱，爸爸，节日快乐`,
    noDataUrl:`/appletsB/pages/nodata/nodata`,//收信限制提示页面
  };

  watch = {
    //  暂停/播放音乐
    musicState(newValue, oldValue) {
      console.log(`musicState value: ${oldValue} -> ${newValue}`);
      const backgroundAudioManager = wx.getBackgroundAudioManager();
      if (newValue == `running`) {
        backgroundAudioManager.play();
      } else {
        backgroundAudioManager.pause();
      }
    }
  };

  computed = {};

  methods = {
    // 切换音乐图标旋转
    toggleMusic() {
      let self = this;
      console.log(`toggle`);
      if (self.musicState == 'running') {
        self.musicState = `paused`;
      } else {
        self.musicState = `running`;
      }
      self.$apply();
    },
    // 播放录音
    recordPlay() {
      console.log(`播放录音`);
      let self = this;

      const innerAudioContext = wx.createInnerAudioContext();
      innerAudioContext.autoplay = true;
      innerAudioContext.src = self.recordUrl;
      innerAudioContext.onPlay(() => {
        console.log('开始播放');
      });
      innerAudioContext.onError(res => {
        console.log(res.errMsg);
        console.log(res.errCode);
      });
    }
  };

  // 获取用户信息
  getUserInfo() {
    console.log(`获取用户信息`);
    let self = this;
    // 获取用户存储的用户信息
    let userinfo = wx.BaaS.storage.get(`userinfo`);
    // 设置头像和名称
    self.userInfo.user_name = userinfo.nickName || `未登录游客`;
    self.userInfo.user_openid = userinfo.openid || `无openid`;
    self.userInfo.user_gender = userinfo.gender || `无`;
  }

  // 自定义数据上报
  report() {
    console.log(`自定义数据上报`);
    let self = this;
    let card_time = new Date();
    // 自定义事件上报（分享事件）
    wx.reportAnalytics('share_card', {
      card_name: self.share.title,
      user_name: self.userInfo.user_name,
      card_time: card_time,
      user_openid: self.userInfo.user_openid,
      user_gender: self.userInfo.user_gender
    });
  }

  // 分享成功邮件通知
  shareEmailNotice() {
    console.log(`分享成功邮件通知`);
    let self = this;

    // 获取当前时间
    let card_time = new Date();

    // 向 tableID 为 39006 的数据表插入一条记录
    let tableID = 39006;
    let Product = new wx.BaaS.TableObject(tableID);
    let product = Product.create();

    // 设置数据
    let apple = {
      send_card: 'Email',
      recordUrl: self.recordUrl,
      user_name: self.userInfo.user_name,
      user_gender: self.userInfo.user_gender,
      user_openid: self.userInfo.user_openid,
      card_time: card_time,
      card_content: self.msg,
      card_name: self.share.title
    };

    product
      .set(apple)
      .save()
      .then(
        res => {
          // success
          console.log(`创建表成功`);
        },
        err => {
          // err
        }
      );
  }

  // 获取当前时间戳
  getTimeNow() {
    console.log(`获取当前时间戳`);
    let self = this;
    let timeCheckNow = new Date();
    let timeNow = timeCheckNow.getTime();
    self.timeNow = timeNow;
    self.$apply();
  }

  // 设置收信倒计时限制
  countdown(options) {
    console.log(`设定倒计时收信限制`);
    let self = this;

    // 获取当前时间
    let timeCheckNow = new Date();
    let timeNow = timeCheckNow.getTime();

    // 如果有设定时间的数据
    if (options.timeNow) {
      // 格式化时间戳
      let nowTime = parseInt(options.timeNow);
      if (options.timeCheckVal == 'unlimited') {
        timeNow = 1;
      } else if (options.timeCheckVal == '30min') {
        nowTime = nowTime + 1000 * 60 * 30;
      } else if (options.timeCheckVal == '3hour') {
        nowTime = nowTime + 1000 * 60 * 60 * 3;
      } else if (options.timeCheckVal == '3day') {
        nowTime = nowTime + 1000 * 60 * 60 * 24 * 3;
      }
      // 如果信件在有效期内
      if (nowTime > timeNow) {
        // 设置背景音乐
        self.setBgMusic();
      } else {
        // 如果信件不在有效期内，就弹出过期提示，并隐藏信件内容
        wx.redirectTo({
          url: `${self.noDataUrl}`
        });
      }
    } else {
      // 设置背景音乐
      self.setBgMusic();
    }

    self.$apply();
  }

  // 处理传递过来的信息
  RegMsg(options) {
    let self = this;

    // 如果有留言就同步留言，没有就设置默认留言
    if (options.msg) {
      self.msg = options.msg;
    } else {
      // 默认留言
      self.msg = self.defaultMsg;
    }

    let msg = self.msg;
    let testArr = [];
    // 遇到以下符号立即截取内容分段
    let reg = /[，|,|.|。|、|？|；|;|/]/g;
    let index = ``;
    let start = 0;
    while ((index = reg.exec(msg) != null)) {
      // 截取两个符合之间的文字，分段放入数组
      testArr.push(msg.substring(start, reg.lastIndex));
      // 检测并改变当前符号索引
      start = reg.lastIndex;
    }
    // 获取最后一段文字
    testArr.push(msg.substring(start, msg.length));
    self.text = testArr;
    self.$apply();
  }

  // 设置背景音乐
  setBgMusic() {
    console.log(`设置背景音乐`);
    let self=this;
    // 设置背景音乐
    const backgroundAudioManager = wx.getBackgroundAudioManager();
    backgroundAudioManager.title = self.bgMusicData.title;
    backgroundAudioManager.epname = self.bgMusicData.epname;
    backgroundAudioManager.singer = self.bgMusicData.singer;
    backgroundAudioManager.coverImgUrl = self.bgMusicData.coverImgUrl;
    backgroundAudioManager.src = self.bgMusicData.src;
  }

  events = {};

  onLoad(options) {
    let self = this;

    // 打印当前页面参数
    console.log(`打印当前页面参数`, options);

    // 获取参数
    self.recordUrl = options.recordUrl;
    self.timeCheckVal = options.timeCheckVal;

    // 倒计时限制
    self.countdown(options);

    // 格式化留言数据
    self.RegMsg(options);

    // 脏检查数据
    self.$apply();

    //显示转发
    wx.showShareMenu({
      withShareTicket: true
    });

    // 获取手机信息
    wx.getSystemInfo({
      success: function(res) {
        self.windowHeight = res.windowHeight;
      }
    });
  }

  // 当页面显示的时候
  onShow() {
    console.log('show');
    // 继续播放背景音乐
    const backgroundAudioManager = wx.getBackgroundAudioManager();
    backgroundAudioManager.play();
  }
  onHide() {
    console.log('hidden');
    const backgroundAudioManager = wx.getBackgroundAudioManager();
    backgroundAudioManager.pause();
  }

  // 当页面切换（隐藏）的时候
  onUnload() {
    console.log('unload');
    // 暂停背景音乐
    const backgroundAudioManager = wx.getBackgroundAudioManager();
    backgroundAudioManager.pause();
  }
  // 设置分享卡片
  onShareAppMessage(res) {
    let self = this;

    // 获取当前时间戳
    self.getTimeNow();

    //  判断是否是点击按钮转发
    if (res.from === 'button') {
      // 来自页面内转发按钮
      console.log(res.target);
    }
    // 卡片内容
    return {
      title: self.share.title,
      path: `${self.share.path}?msg=${self.msg}&recordUrl=${
        self.recordUrl
      }&timeCheckVal=${self.timeCheckVal}&timeNow=${self.timeNow}`,
      // 封面图
      imageUrl: self.share.coverImageUrl,

      // 转发成功
      success: function(res) {
        // 获取用户信息
        self.getUserInfo();

        // 自定义事件上报
        self.report();

        // 分享成功邮件通知
        self.shareEmailNotice();
      },
      fail: function(res) {
        // 转发失败
        console.log(`转发失败`);
      }
    };
  }
}
</script>
