<style lang="less">
.container {
  // background-color: #eee;
  .test_less {
  }
  .record {
    width: 750rpx;
    background-color: #fff;
    margin-top: 30rpx;
    border-bottom: 1px solid #eee;
    .title {
      width: 750rpx;
      height: 80rpx;
      background-color: #eee;
      display: flex;
      align-items: center;
      font-size: 25rpx;
      padding-left: 30rpx;
    }
    .content {
      width: 750rpx;
      height: 100rpx;
      background-color: #fff;
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding-top: 15rpx;
      padding-bottom: 15rpx;
      .left {
        width: 500rpx;
        background-color: #fff;
        display: flex;
        align-items: center;

        .icon {
          background-color: #fff;
          margin-left: 20rpx;
          display: flex;
          align-items: center;
          justify-content: center;
          image {
            width: 50rpx;
            height: 50rpx;
            border: 1px solid pink;
            border-radius: 50%;
            padding: 20rpx;
          }
        }

        .text {
          min-width: 400rpx;
          background-color: #fff;
          margin-left: 20rpx;
          font-size: 25rpx;
        }
      }

      .right {
        height: 50rpx;
        background-color: #fff;
        margin-right: 20rpx;
        display: flex;
        flex-direction: row;
        button {
          height: 50rpx;
          text-align: center;
          line-height: 50rpx;
          color: #fff;
          background-color: pink;
          border: none;
          font-size: 20rpx;
          margin-right: 10rpx;
        }
      }
    }
  }
  .save {
    width: 750rpx;
    margin-top: 20rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    button {
      width: 400rpx;
    }
  }
}
</style>
<template>
  <view class="container">

    <view class="test_less">
      <text style="color:#666">祝福语</text>
      <textarea bindblur="getMsg" bindinput="getMsg" maxlength="{{textarea.maxlength}}"  placeholder="留言" style="height:400rpx;width:750rpx;border:1px solid #eee;margin-top:20rpx;padding:10rpx 10rpx;color:#999" value="{{textarea.msg}}" />
      <button type="primary" bindtap="sendMsg" style="width:400rpx;margin-top:20rpx;" wx:if="{{recordPath==''}}">发送</button>
    </view>

    <view class="record">
      <view class="title">
        <text>添加语音祝福</text>
      </view>
      <view class="content">
        <view class="left">
          <view class="icon" bindtap="recordStart">
            <image src="https://om83cysj8.qnssl.com/%E8%AF%9D%E7%AD%92.png" wx:if="{{!recordState}}"></image>
            <image src="https://om83cysj8.qnssl.com/%E5%BD%95%E9%9F%B3.png" wx:else></image>
          </view>
            <view class="text">
              <view>点击图标可录音</view>
              <view wx:if="{{timeNum!=0}}">时长{{timeNum}}秒</view>
            </view>
        </view>
        
        <view class="right" wx:if="{{recordPath!=''}}">
          <button bindtap="recordPlay" >试听</button>
          <button bindtap="recordDelete" >删除</button>
        </view>
      </view>
      
    </view>
    <view class="save">
        <button bindtap="recordSave" type="primary" wx:if="{{recordPath!=''}}">发送</button>
      </view>

    
   

    
  </view>
</template>

<script>
import wepy from 'wepy';

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '留言'
  };
  components = {};

  data = {
    textarea: {
      type: ``, //入口页面表示
      msg: ``, //输入框的内容
      placeholder: ``, //输入框为空时占位符
      disabled: false, //是否禁用
      maxlength: 100, //最大输入长度，设置为 -1 的时候不限制最大长度
      focus: false //获取焦点
    },
    text: [], //转化后的文本
    router: ``, //留言之后跳转的页面
    recordState: false, //录音状态
    recordPath: ``, //录音临时地址
    timeNum: 0, //录音时长
    timer: `` //定时器
  };

  watch = {
    recordState(newValue, oldValue) {
      let self = this;
      console.log(`recordState value: ${oldValue} -> ${newValue}`);
      const recorderManager = wx.getRecorderManager();
      recorderManager.onStart(() => {
        console.log('recorder start');
        self.timer = setInterval(function() {
          self.timeNum = self.timeNum + 1;
          self.$apply();
        }, 1000);
      });
      recorderManager.onPause(() => {
        console.log('recorder pause');
      });
      recorderManager.onStop(res => {
        console.log('recorder stop', res);
        clearInterval(self.timer);
        const { tempFilePath } = res;
        self.recordPath = res.tempFilePath;
        self.$apply();
      });
      if (newValue) {
        recorderManager.start();
      } else {
        recorderManager.stop();
      }
    }
  };

  // 处理文本信息
  RegMsg() {
    console.log(`文本处理start`);
    let self = this;
    let msg = self.textarea.msg;
    let testArr = [];
    // 遇到以下符号立即截取内容分段
    let reg = /[，|,|.|。|、|？|；|;|/]/g;
    let index = ``;
    let start = 0;
    while ((index = reg.exec(msg) != null)) {
      // 截取两个符合之间的文字，分段放入数组
      testArr.push(msg.substring(start, reg.lastIndex));
      // 检测并改变当前符号索引
      start = reg.lastIndex;
    }
    // 获取最后一段文字
    testArr.push(msg.substring(start, msg.length));
    self.text = testArr;
    self.$apply();
    console.log(`文本处理end`);
  }

  // 知晓云文件保存
  fileSave(filePath, categoryName) {
    let self = this;
    let MyFile = new wx.BaaS.File();
    let fileParams = { filePath };
    let metaData = { categoryName };

    MyFile.upload(fileParams, metaData).then(
      res => {
        let data = res.data;
        console.log(res);
        // 保存录音云文件地址
        self.recordPath = res.data.path;
        self.$apply();
        console.log(self.recordPath);
        // 跳转页面
        self.sendMsg();
      },
      err => {
        console.log(err);
      }
    );
  }

  // 发送消息
  sendMsg() {
    let self = this;
    let msg = self.textarea.msg;
    console.log(self.text);

    let url = `https://shalou.smallzhiyun.com/prize/index.html`;
    wx.navigateTo({
      url: `${self.router}?url=${url}&msg=${msg}&recordUrl=${self.recordPath}`
    });
  }

  computed = {};

  methods = {
    // 存储消息
    getMsg(e) {
      let self = this;

      // 保存输入框留言
      self.textarea.msg = e.detail.value;
      self.$apply();
      // console.log(e.detail.value);
    },

    // 发送消息
    sendMsg() {
      let self = this;
      let msg = self.textarea.msg;
      console.log(self.text);

      let url = `https://shalou.smallzhiyun.com/prize/index.html`;
      wx.navigateTo({
        url: `${self.router}?url=${url}&msg=${msg}&recordUrl=${self.recordPath}`
      });
    },

    //开始录音
    recordStart() {
      let self = this;
      console.log('开始录音');
      self.recordState = !self.recordState;

      // 切换图标
    },

    // 试听
    recordPlay() {
      let self = this;
      console.log(`试听录音`);
      const innerAudioContext = wx.createInnerAudioContext();
      innerAudioContext.autoplay = true;
      innerAudioContext.src = self.recordPath;
      innerAudioContext.onPlay(() => {
        console.log('开始播放');
      });
      innerAudioContext.onError(res => {
        console.log(res.errMsg);
        console.log(res.errCode);
      });
    },

    // 删除录音
    recordDelete() {
      console.log(`删除录音`);
      let self = this;
      self.recordPath = ``;
      self.recordState = false;
      self.timeNum = 0;
    },

    // 保存录音到服务器
    recordSave() {
      let self = this;
      console.log(self.recordPath.substring(0, 5));
      if (self.recordPath.substring(0, 5) == `http:`) {
        console.log(`保存录音`);
        self.fileSave(self.recordPath, `record`);
      } else if (self.recordPath.substring(0, 5) == `wxfil`) {
        console.log(`保存录音`);
        self.fileSave(self.recordPath, `record`);
      } else if (self.recordPath.substring(0, 5) == `https`) {
        self.sendMsg();
      } else {
        console.log(`没有录音`);
      }
    }
  };

  events = {};

  onLoad(options) {
    let self = this;
    self.type = options.type;
    self.router = options.router;
    if (options.RecordFilePath) {
      wx.playVoice({
        filePath: options.RecordFilePath,
        complete: function() {}
      });
    }

    self.$apply();
    console.log(options);
  }
}
</script>
