<style lang="less">
.container {
  .test_less {
    color: pink;
  }
}
</style>
<template>
  <view class="container">
    <!-- <view class="test_less">姓名</view>

    <view>
        <input placeholder="这是一个可以自动聚焦的input" auto-focus/>
    </view> -->


    <view class="test_less">
      <text>留言</text>
      <textarea bindblur="getMsg" bindinput="getMsg" maxlength="{{textarea.maxlength}}"  placeholder="留言" style="height:400rpx;width:750rpx;border:1px solid #eee;margin-top:20rpx;" value="{{textarea.msg}}" />
      <button type="primary" bindtap="sendMsg">发送</button>
    </view>

    

    
  </view>
</template>

<script>
import wepy from 'wepy';

export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '留言'
  };
  components = {};

  data = {
    textarea: {
      type: ``, //入口页面表示
      msg: ``, //输入框的内容
      placeholder: ``, //输入框为空时占位符
      disabled: false, //是否禁用
      maxlength: 100, //最大输入长度，设置为 -1 的时候不限制最大长度
      focus: false //获取焦点
    },
    text: [], //转化后的文本
    router: `` //留言之后跳转的页面
  };

  // 处理文本信息
  RegMsg() {
    console.log(`文本处理start`);
    let self = this;
    let msg = self.textarea.msg;
    let testArr = [];
    // 遇到以下符号立即截取内容分段
    let reg = /[，|,|.|。|、|？|；|;|/]/g;
    let index = ``;
    let start = 0;
    while ((index = reg.exec(msg) != null)) {
      // 截取两个符合之间的文字，分段放入数组
      testArr.push(msg.substring(start, reg.lastIndex));
      // 检测并改变当前符号索引
      start = reg.lastIndex;
    }
    // 获取最后一段文字
    testArr.push(msg.substring(start, msg.length));
    self.text = testArr;
    self.$apply();
    console.log(`文本处理end`);
  }

  computed = {};

  methods = {
    // 存储消息
    getMsg(e) {
      let self = this;

      // 保存输入框留言
      self.textarea.msg = e.detail.value;
      self.$apply();
      // console.log(e.detail.value);
    },

    // 发送消息
    sendMsg() {
      let self = this;
      let msg = self.textarea.msg;
      console.log(self.text);

      let url = `https://shalou.smallzhiyun.com/prize/index.html`;
      wx.navigateTo({
        url: `${self.router}?url=${url}&msg=${msg}`
      });
    }
  };

  events = {};

  onLoad(options) {
    let self = this;
    self.type = options.type;
    self.router = options.router;
    if (options.RecordFilePath) {
      wx.playVoice({
        filePath: options.RecordFilePath,
        complete: function() {}
      });
    }

    self.$apply();
    console.log(options);
  }
}
</script>
